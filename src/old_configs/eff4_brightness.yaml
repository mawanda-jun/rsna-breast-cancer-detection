# Dataset options
dataset_path: "/data/rsna-breast-cancer-detection/train_images_png"
train_dataset: "/projects/rsna-breast-cancer-detection/src/configs/train_ids.yaml"
val_dataset: "/projects/rsna-breast-cancer-detection/src/configs/val_ids.yaml"
keep_num: 3
color_space: 8
train_workers: 10
val_workers: 4
test_workers: 16
img_size: 512

# Augmentations
augmentations:
- VerticalFlip:
    p: 0.5
- HorizontalFlip:
    p: 0.5
- ShiftScaleRotate:
    # shift_limit: 0.
    scale_limit: 0.1
    rotate_limit: 180
    p: .5
- RandomBrightnessContrast:
    brightness_limit: 0.3
    contrast_limit: 0.3
    p: 0.7
# - RandomToneCurve:
#     scale: 0.1
#     p: 0.5


# EXP TYPE
network: 
#   - ChiaResNet:
#       backbone: resnet50  # resnext101_32x8d, resnet50
#       hidden_dim: 1024
#       dropout: 0.
- ChiaEfficientNet:
    backbone: b4
    hidden_dim: 1024
    dropout: 0.

# Training options
# Dataset is ~24K images (but 500 positives)
# We want the network to see 100K images
# wanted train images per epoch: ~2000
# wanted val images per epoch: 20% of train images -> 500
batch_size: 13
gradient_acc: 4 
# Optimizer options
weight_decay: 0. # 1.0e-6
momentum: 0.9
eps: 1.e-8
device: cuda:0
lr: 5.e-4
# Total epochs. This is just a reference number, as it is not linked on how many passes we have done in the dataset.
# the 
epochs: 40
# Set train, val and test frequencies
save_epochs: 5 # Await x epochs, then save.
train_steps: 153  # 153  # Train for n minibatches. ~ 2000 / 13
test_epochs: 5  # Await <test_epochs> epochs, then do a full test on entire validation set

# Checkpoint option
exp_path: "/data/rsna-breast-cancer-detection/exp/EffB4_brightness"